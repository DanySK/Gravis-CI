#!/bin/bash
# Since Gradle 4.10, cache cleaning happens by stopping the running daemon (if any)
echo 'Searching for the gradle executable and stopping the daemons'
find $TRAVIS_BUILD_DIR -name gradlew -exec echo Killing Gradle daemons using {} \; -exec "{}" --stop \; -quit

echo 'Additional cleaning disabled, as it hinders automatic cleaning procedures'
echo '*.lock files change at every build, generating an unavoidable repack'
echo 'on the other hand, they are required for Gradle to maintain its cache size under control'

# Manual cleaning disabled, as it hinders automatic cleaning procedures,
# leading to larger caches and ultimately spoiling the caching in the long run,
# as large archives take longer to unpack than small archives take to pack and unpack.
# echo 'Cleanup files triggering unwanted cache refresh'
# rm -vfr $HOME/.gradle/caches/*/plugin-resolution
# rm -vfr $HOME/.gradle/caches/*/workerMain/
# rm -vfr $HOME/.gradle/caches/*/gradle-kotlin-dsl/*/cache/
# rm -vfr $HOME/.gradle/caches/*/gradle-kotlin-dsl-accessors/*/cache/
# rm -vf $HOME/.gradle/caches/*/fileHashes/*.bin
# PATTERNS=(
#     '*.class'
#     '*.lock'
#     'buildSrc.jar'
#     'cache.properties'
#     'file-access.bin'
#     'module-versions.bin'
#     'resource-at-url.bin'
#     'user-id.txt'
# )
# for PATTERN in ${PATTERNS[@]}
# do
#     find "${HOME}/.gradle/caches/" -name "${PATTERN}" -type f -delete -print
# done
