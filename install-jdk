#!/bin/echo This script needs to be sourced, not executed!

install_jdk () {
    if jabba use $ACTUAL_JDK; then
        echo $ACTUAL_JDK was available and Jabba is using it
    else
        echo installing $ACTUAL_JDK
        jabba install "$ACTUAL_JDK"
        jabba install "$ACTUAL_JDK"
        jabba install "$ACTUAL_JDK"
        echo setting $ACTUAL_JDK as Jabba default
        jabba use $ACTUAL_JDK || exit $?
    fi
}

unix_pre () {
    echo Downloading Jabba installation script
    mkdir -p ~/.gravis-ci
    travis_retry eval "\
        curl -sL --retry 100 https://github.com/shyiko/jabba/raw/master/install.sh --output ~/.gravis-ci/install-jabba.sh\
        && bash ~/.gravis-ci/install-jabba.sh\
    "
    echo Sourcing jabba.sh
    travis_retry source ~/.jabba/jabba.sh
    unset _JAVA_OPTIONS
}

install_jabba_on_linux () {
    unix_pre
}

install_jabba_on_osx () {
    unix_pre
    export JAVA_HOME="$HOME/.jabba/jdk/$ACTUAL_JDK/Contents/Home"
}

install_jabba_on_windows () {
    export PATH="$HOME/.jabba/bin/:$PATH"
    echo Running Jabba installation on Windows 
    POWERSHELL_COMMAND="PowerShell -ExecutionPolicy Bypass -Command '
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12;
        Invoke-Expression (
            Invoke-WebRequest https://github.com/shyiko/jabba/raw/master/install.ps1 -UseBasicParsing
        ).Content'"
    travis_retry eval "$POWERSHELL_COMMAND && jabba"
    echo Indirect installation via PowerShell completed
}

complete_installation_on_linux () {
    echo 
}

complete_installation_on_osx () {
    export JAVA_HOME="$HOME/.jabba/jdk/$ACTUAL_JDK/Contents/Home"
}

complete_installation_on_windows () {
    # Windows is unable to clean child processes, so no Gradle daemon allowed
    export GRADLE_OPTS="-Dorg.gradle.daemon=false $GRADLE_OPTS"
}

echo "running ${TRAVIS_OS_NAME}-specific configuration"
echo "installing Jabba"
install_jabba_on_$TRAVIS_OS_NAME
jabba || (echo "Jabba installation failed" && false)
JDK=${JDK:-"."}
echo "Computing best match for required JDK version: $JDK"
ACTUAL_JDK="$(echo $(travis_retry jabba ls-remote > >(grep -m1 $JDK)))"
echo "Selected JDK: $ACTUAL_JDK"
if [ -z $ACTUAL_JDK ]
then
    echo "No JDK version is compatible with $JDK. Available JDKs are:"
    jabba ls-remote
    exit 2
else
    echo "Best match is $ACTUAL_JDK"
    export JAVA_HOME="$HOME/.jabba/jdk/$ACTUAL_JDK"
    complete_installation_on_$TRAVIS_OS_NAME
    export PATH="$JAVA_HOME/bin:$PATH"
    install_jdk
    which java
    java -Xmx32m -version
    jabba current | grep $JDK
fi

